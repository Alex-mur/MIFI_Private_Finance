package fun.justdevelops.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import fun.justdevelops.ui.listeners.OnLoginButtonClickListener;
import fun.justdevelops.ui.listeners.OnRegisterButtonClickListener;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class LoginForm extends JFrame {
    private JPanel mainPanel;
    private JPasswordField passInput;
    private JLabel loginLabel;
    private JLabel passLabel;
    private JButton registerButton;
    private JButton loginButton;
    private JTextField loginInput;
    private JLabel errorsLabel;


    LoginForm(OnLoginButtonClickListener onLoginButtonClickListener, OnRegisterButtonClickListener onRegisterButtonClickListener) {
        setTitle("Управление финансами. Вход в систему");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setMinimumSize(new Dimension(400, 200));
        pack();
        setLocationRelativeTo(null);
        mainPanel.setBorder(new EmptyBorder(10, 10, 10, 10));
        setContentPane(mainPanel);
        initListeners(onLoginButtonClickListener, onRegisterButtonClickListener);
    }

    private void initListeners(OnLoginButtonClickListener onLoginButtonClickListener, OnRegisterButtonClickListener onRegisterButtonClickListener) {
        if (loginButton == null || registerButton == null) return;
        loginButton.addActionListener(e -> {
            clearErrorMessage();
            if (!checkInput()) return;
            onLoginButtonClickListener.click(loginInput.getText(), passInput.getText());
        });
        registerButton.addActionListener(e -> {
            clearErrorMessage();
            if (!checkInput()) return;
            onRegisterButtonClickListener.click(loginInput.getText(), passInput.getText());
        });
    }

    public void showErrorMessage(String message) {
        errorsLabel.setText(message);
    }

    private void clearErrorMessage() {
        errorsLabel.setText("");
    }

    private boolean checkInput() {
        String login = loginInput.getText();
        String pass = passInput.getText();
        if (login == null || login.isBlank() || pass == null || pass.isBlank()) {
            showErrorMessage("Вы должны ввести логин и пароль");
            return false;
        }
        return true;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(6, 3, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        loginLabel = new JLabel();
        loginLabel.setText("Пользователь");
        mainPanel.add(loginLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passLabel = new JLabel();
        passLabel.setText("Пароль");
        mainPanel.add(passLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        mainPanel.add(separator1, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        loginInput = new JTextField();
        mainPanel.add(loginInput, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        loginButton = new JButton();
        loginButton.setText("Войти");
        mainPanel.add(loginButton, new GridConstraints(4, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        registerButton = new JButton();
        registerButton.setText("Создать пользователя");
        mainPanel.add(registerButton, new GridConstraints(5, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        errorsLabel = new JLabel();
        errorsLabel.setForeground(new Color(-1769461));
        errorsLabel.setHorizontalAlignment(0);
        errorsLabel.setHorizontalTextPosition(0);
        errorsLabel.setText("");
        mainPanel.add(errorsLabel, new GridConstraints(3, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passInput = new JPasswordField();
        mainPanel.add(passInput, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
